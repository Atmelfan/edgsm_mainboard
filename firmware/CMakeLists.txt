
cmake_minimum_required(VERSION 3.7)
project(attolyzer C ASM)
set(CMAKE_C_STANDARD 99)

#Paramaters
set(OPT -Os)
set(HAL_DIR "HAL")
set(STM32_FAMILY "F4")
set(STM32_DEVICE "F415xx")


#Sources
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/${HAL_DIR}/Drivers/STM32${STM32_FAMILY}xx_HAL_Driver/Src HAL_DRIVER_SOURCES)
file(GLOB REMOVE_TEMPLATES ${CMAKE_CURRENT_SOURCE_DIR}/${HAL_DIR}/Drivers/STM32${STM32_FAMILY}xx_HAL_Driver/Src/*_template.c)
#
if (REMOVE_TEMPLATES)
    message(INFO " Removing garbage generated by CubeMX")
    list(REMOVE_ITEM HAL_DRIVER_SOURCES ${REMOVE_TEMPLATES})
endif ()
aux_source_directory(${CMAKE_SOURCE_DIR}/${HAL_DIR}/Src MX_SOURCES)
list(REMOVE_ITEM MX_SOURCES ${CMAKE_SOURCE_DIR}/${HAL_DIR}/Src/main.c)
set(HAL_SOURCES ${MX_SOURCES} ${HAL_DRIVER_SOURCES})



#Headers
include_directories(${CMAKE_SOURCE_DIR}/${HAL_DIR}/Drivers/STM32${STM32_FAMILY}xx_HAL_Driver/Inc/)
include_directories(${CMAKE_SOURCE_DIR}/${HAL_DIR}/Drivers/STM32${STM32_FAMILY}xx_HAL_Driver/Inc/Legacy)
include_directories(${CMAKE_SOURCE_DIR}/${HAL_DIR}/Drivers/CMSIS/Device/ST/STM32${STM32_FAMILY}xx/Include/)
include_directories(${CMAKE_SOURCE_DIR}/${HAL_DIR}/Drivers/CMSIS/Include/)
include_directories(${CMAKE_SOURCE_DIR}/${HAL_DIR}/Inc/)

#ASM sources
file(GLOB ASM_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/${HAL_DIR}/*.s)
foreach(asm_file ${ASM_SOURCES})
    set_source_files_properties(${asm_file} PROPERTIES COMPILE_FLAGS "-x assembler-with-cpp") #Special compile flags
endforeach()
message(INFO " Including assembly files: ${ASM_SOURCES}")

#Compiler
set(CMAKE_C_COMPILER "arm-none-eabi-gcc")
set(CMAKE_CXX_COMPILER "arm-none-eabi-g++")
set(CMAKE_ASM_COMPILER "arm-none-eabi-gcc")

#Processor config
set(CPU "-mcpu=cortex-m4")
set(FPU "-mfpu=fpv4-sp-d16")
set(FLOAT_ABI "-mfloat-abi=hard")
set(MCU "${CPU} -mthumb ${FPU} ${FLOAT_ABI}")

#Definitions
#add_definitions(-DUSE_FULL_LL_DRIVER)
add_definitions(-DUSE_HAL_DRIVER)
add_definitions(-DSTM32${STM32_DEVICE})

#flags
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${MCU} ${OPT} -Wall -fdata-sections -ffunction-sections")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -MMD -MP -flto -Wno-strict-aliasing")

# link script
file(GLOB LINKER_SCRIPT ${CMAKE_SOURCE_DIR}/*_FLASH.ld)

#linker
set(LIBS "-lc -lm -lnosys")
set(LDFLAGS "${MCU} -flto -specs=nano.specs -specs=nosys.specs -T${LINKER_SCRIPT} ${LIBS} -Wl,-Map=symbols.map,--cref -Wl,--gc-sections -Wl,--print-memory-usage")

#add linker flags
set( CMAKE_CXX_FLAGS  "${LDFLAGS}" )
set( CMAKE_EXE_LINKER_FLAGS  "${LDFLAGS}" )




########################### ADDITIONAL LIBRARIES ###########################

## ST Usb stack
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/${HAL_DIR}/Middlewares/ST/STM32_USB_Device_Library/Core/Src HAL_MIDDLE_USB_CORE)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/${HAL_DIR}/Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Src HAL_MIDDLE_USB_CDC)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/${HAL_DIR}/Middlewares/ST/STM32_USB_Device_Library/Core/Inc)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/${HAL_DIR}/Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc)
set(ADDITIONAL_SOURCES ${ADDITIONAL_SOURCES} ${HAL_MIDDLE_USB_CORE} ${HAL_MIDDLE_USB_CDC})

###########################      EXECUTABLE      ###########################
#Application source
set(MX_SOURCES )


add_executable(${PROJECT_NAME} main.c ${ASM_SOURCES} ${HAL_SOURCES} ${MX_SOURCES} ${ADDITIONAL_SOURCES})
set_target_properties(${PROJECT_NAME} PROPERTIES LINK_DEPENDS ${LINKER_SCRIPT})